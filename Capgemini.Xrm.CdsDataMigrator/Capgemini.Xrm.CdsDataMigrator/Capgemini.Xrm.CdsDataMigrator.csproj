<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <ProductVersion>8.0.30703</ProductVersion>
    <TargetFramework>net462</TargetFramework>
    <AssemblyName>Capgemini.Xrm.CdsDataMigrator</AssemblyName>
    <AssemblyTitle>Capgemini.Xrm.CdsDataMigrator</AssemblyTitle>
    <Product>Capgemini.Xrm.CdsDataMigrator</Product>
    <Company>Capgemini</Company>
    <Description>
      The CDS Data Migrator tool provides an easy to use interface that enables you to generate an XML schema file that can be used to export data from one Dataverse environment and import into another. The tool not only supports the ability to add entity attributes and many-to-many relationships to the schema, but beyond that, it supports the creation of filters and GUID mappings which are stored as JSON file formats.
      Its key features include:
      1) Generation of Dynamics 365 data import and/or export schema file. Both JSON and CSV formats are supported,
      2) Export of data from one Dynamics 365 instance into JSON or CSV files,
      3) Import of data contained with either JSON or CSV file into a Dynamics 365 instance,
      4) Colour coded sorting applied to attributes,
      5) Apply GUID Mappings included in export / import process,
      6) Apply Filters included in the export / import process,
      7) Ability to migrate Calendars.
    </Description>
    <Copyright>Capgemini Copyright © 2022</Copyright>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <IncludeSymbols>true</IncludeSymbols>
  </PropertyGroup>
  <PropertyGroup>
    <PackageId>Capgemini.DataMigration.XrmToolBoxPlugin</PackageId>
    <PackageTags>XrmToolBox Plugins</PackageTags>
    <Authors>Capgemini</Authors>
    <PackageProjectUrl>https://github.com/Capgemini/xrm-datamigration-xrmtoolbox</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Capgemini/xrm-datamigration-xrmtoolbox.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugType>full</DebugType>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="ILRepack.MSBuild.Task" Version="2.0.13" />
    <PackageReference Include="XrmToolBoxPackage" Version="1.2022.10.58" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\GlobalSuppressions.cs" Link="GlobalSuppressions.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Capgemini.Xrm.CdsDataMigratorLibrary\Capgemini.Xrm.CdsDataMigratorLibrary.csproj" />
  </ItemGroup>
  <Target Name="ILRepack" AfterTargets="Build">
    <PropertyGroup>
      <WorkingDirectory>$(MSBuildThisFileDirectory)bin\$(Configuration)\$(TargetFramework)</WorkingDirectory>
    </PropertyGroup>

    <ItemGroup>
      <InputAssemblies Include="$(WorkingDirectory)\Capgemini.*.dll" />
      <InputAssemblies Include="$(WorkingDirectory)\AeroWizard.dll" />
      <InputAssemblies Include="$(WorkingDirectory)\CsvHelper.dll" />
      <InputAssemblies Include="$(WorkingDirectory)\Newtonsoft.Json.dll" />
      <InputAssemblies Include="$(WorkingDirectory)\Polly.dll" />
    </ItemGroup>

    <ItemGroup>
      <InternalizeExcludeAssemblies Include="^Capgemini" />
    </ItemGroup>

    <ILRepack OutputType="$(OutputType)" MainAssembly="$(AssemblyName).dll" OutputAssembly="$(AssemblyName).dll" InputAssemblies="@(InputAssemblies)" InternalizeExcludeAssemblies="@(InternalizeExcludeAssemblies)" WorkingDirectory="$(WorkingDirectory)" />

    <Copy SourceFiles="$(WorkingDirectory)\$(AssemblyName).dll" DestinationFolder="$(OutDir)Plugins" />
    <Copy SourceFiles="$(WorkingDirectory)\$(AssemblyName).pdb" DestinationFolder="$(OutDir)Plugins" />

    <ItemGroup>
      <FilesToDelete Include="$(WorkingDirectory)\*.dll" />
      <FilesToDelete Include="$(WorkingDirectory)\*.config" />
      <FilesToDelete Include="$(WorkingDirectory)\*.pdb" />
    </ItemGroup>
    <Message Text="Deleting Files @(FilesToDelete)" />
    <Delete Files="@(FilesToDelete)">
      <Output TaskParameter="DeletedFiles" ItemName="FilesDeleted" />
    </Delete>
    <Message Text="Files deleted: @(FilesDeleted)" />

    <Copy SourceFiles="$(OutDir)Plugins\$(AssemblyName).dll" DestinationFolder="$(WorkingDirectory)" />
    <Copy SourceFiles="$(OutDir)Plugins\$(AssemblyName).pdb" DestinationFolder="$(WorkingDirectory)" />
  </Target>
</Project>